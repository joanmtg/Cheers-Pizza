/**
 * Proyecto Desarrollo de Software II
 * Universidad del Valle
 * EISC
 *
 * Integrantes: 
 *
 * Jhonier Andrés Calero Rodas		1424599
 * Fabio Andrés Castañeda Duarte	1424386
 * Juan Pablo Moreno Muñoz		1423437
 * Joan Manuel Tovar Guzmán		1423124
 *
 * file: VentanaRegistrarModificarItem.java
 * 
 */
package GUI.GUIItems;

import AccesoDatosORM.AdaptadorCategoriaControlador;
import AccesoDatosORM.AdaptadorItemControlador;
import Administracion.Categoria;
import Administracion.Item;
import Validaciones.Validaciones;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.Base64;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Joan
 */
public class VentanaRegistrarModificarItem extends javax.swing.JFrame {

    Validaciones validacion = new Validaciones();
    AdaptadorCategoriaControlador controladorCategoria = new AdaptadorCategoriaControlador();
    AdaptadorItemControlador controladorItem = new AdaptadorItemControlador();

    File ficheroImagen;
    /**
     * Creates new form VentanaRegistrarItem
     */

    String operacion; //"Registro" o "Modificación"
    JFrame ventanaAnterior;
    Item item = new Item();

    public VentanaRegistrarModificarItem(JFrame anterior, String operacion, Item item) {
        super(operacion + " de Item");
        initComponents();

        this.operacion = operacion;
        this.ventanaAnterior = anterior;
        this.item = item;

        setLocationRelativeTo(null);

        ArrayList<Categoria> categorias = controladorCategoria.obtenerTodasCategorias();

        for (int i = 0; i < categorias.size(); i++) {
            String categoria = categorias.get(i).getNombre();
            cbCategoria.addItem(categoria);
        }

        defaultImage();

        if (operacion.equals("Modificacion")) {

            tfNombre.setText(item.getNombre());
            tfPrecio.setText("" + item.getPrecioActual());
            taDescripcion.setText(item.getDescripcion());
            cbCategoria.setSelectedItem(item.getCategoria().getNombre());

            BufferedImage img = decodeToImage(item.getFotografia());
            ImageIcon icon = new ImageIcon(img);
            Icon icono = new ImageIcon(icon.getImage().getScaledInstance(lImagenItem.getWidth(), lImagenItem.getHeight(), Image.SCALE_DEFAULT));
            lImagenItem.setIcon(icono);

        } else if (operacion.equals("Visualizacion")) {

            tfNombre.setEditable(false);
            tfPrecio.setEditable(false);
            taDescripcion.setEditable(false);
            cbCategoria.setEnabled(false);
            bCambiarImagen.setEnabled(false);
            bFinalizar.setEnabled(false);
            bLimpiar.setEnabled(false);

            tfNombre.setText(item.getNombre());
            tfPrecio.setText("" + item.getPrecioActual());
            taDescripcion.setText(item.getDescripcion());
            cbCategoria.setSelectedItem(item.getCategoria().getNombre());

            BufferedImage img = decodeToImage(item.getFotografia());
            ImageIcon icon = new ImageIcon(img);
            Icon icono = new ImageIcon(icon.getImage().getScaledInstance(lImagenItem.getWidth(), lImagenItem.getHeight(), Image.SCALE_DEFAULT));
            lImagenItem.setIcon(icono);

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPrincipal = new javax.swing.JPanel();
        panelInferior = new javax.swing.JPanel();
        bAtras = new javax.swing.JButton();
        bFinalizar = new javax.swing.JButton();
        bLimpiar = new javax.swing.JButton();
        lNombre = new javax.swing.JLabel();
        tfNombre = new javax.swing.JTextField();
        lPrecio = new javax.swing.JLabel();
        tfPrecio = new javax.swing.JTextField();
        lCategoria = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taDescripcion = new javax.swing.JTextArea();
        lDescription = new javax.swing.JLabel();
        cbCategoria = new javax.swing.JComboBox<String>();
        lImagen = new javax.swing.JLabel();
        bCambiarImagen = new javax.swing.JButton();
        lImagenItem = new javax.swing.JLabel();
        lLogo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        panelPrincipal.setBackground(new java.awt.Color(89, 30, 27));

        panelInferior.setBackground(new java.awt.Color(89, 30, 27));
        panelInferior.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Ingrese los datos del Ítem", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Eras Medium ITC", 0, 16), new java.awt.Color(255, 255, 255))); // NOI18N
        panelInferior.setMaximumSize(new java.awt.Dimension(524, 448));
        panelInferior.setMinimumSize(new java.awt.Dimension(524, 448));
        panelInferior.setName(""); // NOI18N

        bAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bAtras.png"))); // NOI18N
        bAtras.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bAtrasPR.png"))); // NOI18N
        bAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAtrasActionPerformed(evt);
            }
        });

        bFinalizar.setText("Finalizar");
        bFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFinalizarActionPerformed(evt);
            }
        });

        bLimpiar.setText("Limpiar");
        bLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLimpiarActionPerformed(evt);
            }
        });

        lNombre.setFont(new java.awt.Font("Eras Demi ITC", 0, 14)); // NOI18N
        lNombre.setForeground(new java.awt.Color(255, 255, 255));
        lNombre.setText("Nombre:");

        lPrecio.setFont(new java.awt.Font("Eras Demi ITC", 0, 14)); // NOI18N
        lPrecio.setForeground(new java.awt.Color(255, 255, 255));
        lPrecio.setText("Precio:");

        tfPrecio.setText("0");
        tfPrecio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfPrecioFocusGained(evt);
            }
        });
        tfPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfPrecioKeyTyped(evt);
            }
        });

        lCategoria.setFont(new java.awt.Font("Eras Demi ITC", 0, 14)); // NOI18N
        lCategoria.setForeground(new java.awt.Color(255, 255, 255));
        lCategoria.setText("Categoría:");

        taDescripcion.setColumns(20);
        taDescripcion.setRows(5);
        taDescripcion.setMaximumSize(new java.awt.Dimension(164, 94));
        taDescripcion.setMinimumSize(new java.awt.Dimension(164, 94));
        jScrollPane1.setViewportView(taDescripcion);

        lDescription.setFont(new java.awt.Font("Eras Demi ITC", 0, 14)); // NOI18N
        lDescription.setForeground(new java.awt.Color(255, 255, 255));
        lDescription.setText("Descripción:");

        cbCategoria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione una categoría" }));

        lImagen.setFont(new java.awt.Font("Eras Demi ITC", 0, 14)); // NOI18N
        lImagen.setForeground(new java.awt.Color(255, 255, 255));
        lImagen.setText("Imagen:");

        bCambiarImagen.setText("Cambiar");
        bCambiarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCambiarImagenActionPerformed(evt);
            }
        });

        lImagenItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/imagenPizzaDefault.jpg"))); // NOI18N

        javax.swing.GroupLayout panelInferiorLayout = new javax.swing.GroupLayout(panelInferior);
        panelInferior.setLayout(panelInferiorLayout);
        panelInferiorLayout.setHorizontalGroup(
            panelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInferiorLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(panelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelInferiorLayout.createSequentialGroup()
                        .addGroup(panelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lImagen))
                        .addGap(32, 32, 32)
                        .addGroup(panelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelInferiorLayout.createSequentialGroup()
                                .addComponent(bLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelInferiorLayout.createSequentialGroup()
                                .addComponent(lImagenItem, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bCambiarImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(panelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(panelInferiorLayout.createSequentialGroup()
                            .addGroup(panelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lPrecio)
                                .addComponent(lDescription)
                                .addComponent(lNombre))
                            .addGap(18, 18, 18)
                            .addGroup(panelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1)
                                .addGroup(panelInferiorLayout.createSequentialGroup()
                                    .addGroup(panelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(tfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(0, 0, Short.MAX_VALUE))))
                        .addGroup(panelInferiorLayout.createSequentialGroup()
                            .addComponent(lCategoria)
                            .addGap(32, 32, 32)
                            .addComponent(cbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(152, 152, 152))))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        panelInferiorLayout.setVerticalGroup(
            panelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInferiorLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(panelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfNombre))
                .addGap(18, 18, 18)
                .addGroup(panelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lPrecio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfPrecio))
                .addGap(18, 18, 18)
                .addGroup(panelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(panelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(panelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lImagenItem, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelInferiorLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(bCambiarImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(panelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(bAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        lLogo.setBackground(new java.awt.Color(89, 30, 27));
        lLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logoPequeno.png"))); // NOI18N
        lLogo.setMaximumSize(new java.awt.Dimension(140, 140));
        lLogo.setMinimumSize(new java.awt.Dimension(140, 140));
        lLogo.setPreferredSize(new java.awt.Dimension(140, 140));

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPrincipalLayout.createSequentialGroup()
                .addGap(263, 263, 263)
                .addComponent(lLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(260, 260, 260))
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(panelInferior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelInferior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAtrasActionPerformed

        if (operacion.equals("Visualizacion")) {

            this.dispose();
            VentanaGestionItems ventanaItems = (VentanaGestionItems) ventanaAnterior;
            ventanaItems.llenarTablaItems();
            ventanaItems.setVisible(true);

        } else {
            int opcion = JOptionPane.showConfirmDialog(null, "¿Desea cancelar la operación actual?");

            if (opcion == JOptionPane.YES_OPTION) {

                this.dispose();
                VentanaGestionItems ventanaItems = (VentanaGestionItems) ventanaAnterior;
                ventanaItems.llenarTablaItems();
                ventanaItems.setVisible(true);

            }
        }
    }//GEN-LAST:event_bAtrasActionPerformed

    private void bFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFinalizarActionPerformed

        try {

            if (tfNombre.getText().equals("") || tfPrecio.getText().equals("0") || taDescripcion.getText().equals("") || cbCategoria.getSelectedIndex() == 0) {

                JOptionPane.showMessageDialog(null, "Debe ingresar todos los campos solicitados", "Mensaje", JOptionPane.WARNING_MESSAGE);

            } else {

                // Obteniendo los campos
                String nombre = tfNombre.getText();
                double precio = Double.parseDouble(tfPrecio.getText());
                String descripcion = taDescripcion.getText();

                Long codCategoria = (long) cbCategoria.getSelectedIndex();
                Categoria categoria = controladorCategoria.obtenerCategoria(codCategoria);

                BufferedImage img = ImageIO.read(new File(ficheroImagen.toString()));
                String image_string = encodeImageToString(img);

                Item nuevoItem = new Item(nombre, descripcion, precio, image_string, categoria);

                if (operacion.equalsIgnoreCase("Registro")) {

                    controladorItem.crearItem(nuevoItem);
                    JOptionPane.showMessageDialog(null, "El item " + nuevoItem.getNombre() + " fue registrado con éxito", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                    limpiarCampos();

                } else if (operacion.equalsIgnoreCase("Modificacion")) {

                    nuevoItem.setCodigo(item.getCodigo());
                    controladorItem.editarItem(nuevoItem);
                    JOptionPane.showMessageDialog(null, "El item " + nuevoItem.getNombre() + " fue modificado con éxito", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                    limpiarCampos();

                    VentanaGestionItems ventanaItems = (VentanaGestionItems) ventanaAnterior;
                    ventanaItems.llenarTablaItems();
                    ventanaItems.setVisible(true);
                    this.setVisible(false);

                }

            }
        } catch (IOException ex) {
            Logger.getLogger(VentanaRegistrarModificarItem.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_bFinalizarActionPerformed

    private void bLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLimpiarActionPerformed
        limpiarCampos();
    }//GEN-LAST:event_bLimpiarActionPerformed

    private void tfPrecioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPrecioKeyTyped
        validacion.validarNumeros(evt);
    }//GEN-LAST:event_tfPrecioKeyTyped

    private void bCambiarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCambiarImagenActionPerformed

        JFileChooser file = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("*.jpg", "jpg");
        file.setFileFilter(filtro);

        int seleccion = file.showOpenDialog(new JPanel());

        if (seleccion == JFileChooser.APPROVE_OPTION) {

            //Seleccionamos el fichero
            ficheroImagen = file.getSelectedFile();
            ImageIcon icon = new ImageIcon(ficheroImagen.toString());
            Icon icono = new ImageIcon(icon.getImage().getScaledInstance(lImagenItem.getWidth(), lImagenItem.getHeight(), Image.SCALE_DEFAULT));
            lImagenItem.setIcon(icono);

        }

    }//GEN-LAST:event_bCambiarImagenActionPerformed

    private void tfPrecioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfPrecioFocusGained
        if (operacion.equals("Registro")) {
            tfPrecio.setText("");
        }
    }//GEN-LAST:event_tfPrecioFocusGained

    public void limpiarCampos() {

        tfNombre.setText("");
        tfPrecio.setText("" + 0);
        taDescripcion.setText("");
        cbCategoria.setSelectedIndex(0);

        defaultImage();

    }

    public void defaultImage() {
        try {
            ficheroImagen = new File(getClass().getResource("/images/imagenPizzaDefault.jpg").toURI());
            ImageIcon icon = new ImageIcon(ficheroImagen.toString());
            Icon icono = new ImageIcon(icon.getImage().getScaledInstance(lImagenItem.getWidth(), lImagenItem.getHeight(), Image.SCALE_DEFAULT));
            lImagenItem.setIcon(icono);
        } catch (URISyntaxException ex) {
            Logger.getLogger(VentanaRegistrarModificarItem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public String encodeImageToString(BufferedImage image) {

        String imageString = null;
        ByteArrayOutputStream bos = new ByteArrayOutputStream();

        try {

            ImageIO.write(image, "jpg", bos);
            byte[] imageBytes = bos.toByteArray();
            imageString = Base64.getEncoder().encodeToString(imageBytes);

            bos.close();

        } catch (IOException e) {

            System.out.println("No se pudo codificar la imagen");

        }
        return imageString;
    }

    public static BufferedImage decodeToImage(String imageString) {

        BufferedImage image = null;
        byte[] imageByte;

        try {

            imageByte = Base64.getDecoder().decode(imageString);
            ByteArrayInputStream bis;
            bis = new ByteArrayInputStream(imageByte);
            image = ImageIO.read(bis);

            bis.close();

        } catch (Exception e) {

            System.out.println("No se pudo decodificar la imagen");

        }
        return image;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaRegistrarModificarItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaRegistrarModificarItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaRegistrarModificarItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaRegistrarModificarItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaRegistrarModificarItem(null, null, null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAtras;
    private javax.swing.JButton bCambiarImagen;
    private javax.swing.JButton bFinalizar;
    private javax.swing.JButton bLimpiar;
    public javax.swing.JComboBox<String> cbCategoria;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lCategoria;
    private javax.swing.JLabel lDescription;
    private javax.swing.JLabel lImagen;
    private javax.swing.JLabel lImagenItem;
    private javax.swing.JLabel lLogo;
    private javax.swing.JLabel lNombre;
    private javax.swing.JLabel lPrecio;
    private javax.swing.JPanel panelInferior;
    private javax.swing.JPanel panelPrincipal;
    public javax.swing.JTextArea taDescripcion;
    public javax.swing.JTextField tfNombre;
    public javax.swing.JTextField tfPrecio;
    // End of variables declaration//GEN-END:variables
}
